{"version":3,"file":"static/js/416.3c970bcf.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/ContactsFilter/ContactsFilter.js","pages/ContactsPage.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from 'reselect';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectToken = state => state.auth.token;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter)\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [isAdding, setIsAdding] = useState(false);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const contacts = useSelector(state => state.contacts.items);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      toast.error('Please provide both name and phone.', { closeOnClick: false });\n      return;\n    }\n\n    if (contacts.some(contact => contact.name === name || contact.number === number)) {\n      toast.error('Contact with the same name or phone already exists.', { closeOnClick: false });\n      return;\n    }\n    \n    setIsAdding(true);\n    dispatch(addContact({ name: name, number: number }))\n      .then(() => {\n        setName('');\n        setNumber('');\n        setIsAdding(false);\n        toast.success('Contact added successfully!', { closeOnClick: false });\n      })\n      .catch(error => {\n        toast.error('An error occurred while adding the contact.', { closeOnClick: false });\n        setIsAdding(false);\n      });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"number\">Phone number</label>\n        <input\n          type=\"tel\"\n          id=\"number\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\" disabled={isAdding || isLoading}>\n        {isAdding ? 'Adding...' : 'Add contact'}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const [deletingContactId, setDeletingContactId] = useState(null);\n\n  const handleDeleteContact = contactId => {\n    setDeletingContactId(contactId);\n    dispatch(deleteContact(contactId))\n      .then(() => {\n        dispatch(fetchContacts());\n        setDeletingContactId(null);\n      })\n      .catch(error => {\n        console.log('An error occurred while deleting the contact.', error);\n        setDeletingContactId(null);\n      });\n  };\n\n  return (\n    <div>\n      {visibleContacts.map(contact => (\n        <div key={contact.id}>\n          <span>\n            {contact.name}: {contact.number} \n          </span>\n          <button\n            onClick={() => handleDeleteContact(contact.id)}\n            disabled={deletingContactId === contact.id}\n          >\n            {deletingContactId === contact.id ? 'Deleting...' : 'Delete'}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/slice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nconst ContactsFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (e) => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilterChange}\n      placeholder=\"Search contacts...\"\n    />\n  );\n};\n\nexport default ContactsFilter;","import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setContacts } from '../redux/contacts/slice';\nimport { selectToken } from '../redux/contacts/selectors';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport ContactsFilter from '../components/ContactsFilter/ContactsFilter';\n\nimport { fetchContacts} from '../redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n\n  useEffect(() => {\n    dispatch(fetchContacts({\n      token\n    })).then(data => {\n      setContacts(data.payload)\n    });\n\n  }, [dispatch, token]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h2>Your contacts</h2>\n      <ContactForm />\n      <ContactsFilter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","contacts","filter","selectToken","auth","token","selectVisibleContacts","items","contact","toLowerCase","includes","number","useState","setName","setNumber","isAdding","setIsAdding","dispatch","useDispatch","isLoading","useSelector","handleChange","e","target","onSubmit","preventDefault","trim","some","toast","closeOnClick","addContact","then","catch","error","htmlFor","type","id","onChange","disabled","visibleContacts","deletingContactId","setDeletingContactId","onClick","contactId","deleteContact","fetchContacts","console","log","setFilter","placeholder","useEffect","data","setContacts","payload","Helmet"],"sourceRoot":""}